openapi: 3.0.3
info:
  title: RevPay API
  description: API for managing purchase pre-approvals and payment links.
  version: 1.0.0
  contact:
    name: RevPay Support
    email: support@revpay.com.br
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://service-develop.revpay.com.br
    description: Development server

paths:
  /purchase/pre-aproval:
    post:
      summary: Create a credit analysis pre-approval
      description: Submits a request for credit analysis pre-approval based on user details.
      operationId: createCreditAnalysis
      requestBody:
        description: User details for credit analysis
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreditAnalysisDTO'
      responses:
        '201':
          description: Credit analysis created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCreditAnalysisResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /purchase/create-payment:
    post:
      summary: Create a payment link
      description: Generates a payment link for a purchase based on provided details.
      operationId: createPaymentLink
      requestBody:
        description: Payment details to generate a link
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentDTO'
      responses:
        '201':
          description: Payment link created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /get-payment-info:
    get:
      summary: Retrieve payment information
      description: Retrieves the status of a payment based on the invoice ID.
      operationId: getPaymentInfo
      parameters:
        - name: invoiceId
          in: query
          description: Unique identifier of the invoice
          required: true
          schema:
            type: string
            example: "inv_12345"
      responses:
        '200':
          description: Payment information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentInformationResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /get-client-info:
    get:
      summary: Retrieve client information
      description: Retrieves the status and credit limit of a client based on their CPF.
      operationId: getClientInfo
      parameters:
        - name: cpf
          in: query
          description: Brazilian CPF (Cadastro de Pessoas Físicas)
          required: true
          schema:
            type: string
            example: "123.456.789-00"
      responses:
        '200':
          description: Client information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResellerInformationResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /register-webhook:
    post:
      summary: Register a webhook
      description: Registers a webhook URL to receive notifications.
      operationId: registerWebhook
      requestBody:
        description: Webhook URL to register
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWebhookDTO'
      responses:
        '201':
          description: Webhook registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterWebhookResponseDTO'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    CreateCreditAnalysisDTO:
      type: object
      required:
        - cpf
        - birthdate
        - phone
      properties:
        cpf:
          type: string
          description: Brazilian CPF (Cadastro de Pessoas Físicas)
          example: "123.456.789-00"
        birthdate:
          type: string
          description: User's birth date
          example: "1990-01-01"
        phone:
          type: string
          description: User's phone number
          example: "+5511999999999"
        name:
          type: string
          description: User's full name
          example: "João Silva"
        email:
          type: string
          format: email
          description: User's email address
          example: "joao.silva@example.com"
        occupation:
          type: string
          description: User's occupation
          example: "Software Engineer"
        nationality:
          type: string
          description: User's nationality
          example: "Brazilian"
        address:
          type: object
          properties:
            street_name:
              type: string
              example: "Rua das Flores"
            number:
              type: string
              example: "123"
            neighborhood:
              type: string
              example: "Centro"
            zip_code:
              type: string
              example: "12345-678"
            city:
              type: string
              example: "São Paulo"
            state:
              type: string
              example: "SP"
            complement:
              type: string
              example: "Apto 45"

    CreateCreditAnalysisResponseDTO:
      type: object
      properties:
        limit:
          type: number
          description: Credit limit assigned to the user
          example: 5000
        status:
          type: string
          enum:
            - approved
            - rejected
            - pending
          description: Status of the credit analysis
          example: "approved"

    CreatePaymentDTO:
      type: object
      required:
        - cpf
        - installments
        - marketToken
        - total_value
      properties:
        cpf:
          type: string
          description: Brazilian CPF (Cadastro de Pessoas Físicas)
          example: "123.456.789-00"
        installments:
          type: integer
          description: Number of payment installments
          example: 12
        marketToken:
          type: string
          description: Token identifying the market or merchant
          example: "market_abc123"
        total_value:
          type: number
          description: Total value of the purchase
          example: 1200.50

    CreatePaymentResponseDTO:
      type: object
      required:
        - paymentLink
        - paymentId
      properties:
        paymentLink:
          type: string
          description: URL for the payment link
          example: "https://service-develop.revpay.com.br/pay/abc123"
        paymentId:
          type: string
          description: Unique identifier for the payment
          example: "pay_abc123"

    GetPaymentInformationDTO:
      type: object
      required:
        - invoiceId
      properties:
        invoiceId:
          type: string
          description: Unique identifier of the invoice
          example: "inv_12345"

    GetPaymentInformationResponseDTO:
      type: object
      properties:
        status:
          type: string
          description: Status of the payment
          example: "completed"

    GetResellerInformationDTO:
      type: object
      required:
        - cpf
      properties:
        cpf:
          type: string
          description: Brazilian CPF (Cadastro de Pessoas Físicas)
          example: "123.456.789-00"

    GetResellerInformationResponseDTO:
      type: object
      properties:
        status:
          type: string
          description: Status of the client
          example: "active"
        limit:
          type: string
          description: Credit limit of the client
          example: "5000"

    RegisterWebhookDTO:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: Webhook URL to register
          example: "https://example.com/webhook"

    RegisterWebhookResponseDTO:
      type: object
      properties:
        url:
          type: string
          description: Registered webhook URL
          example: "https://example.com/webhook"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Invalid request"
